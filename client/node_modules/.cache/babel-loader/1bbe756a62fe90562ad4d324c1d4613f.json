{"ast":null,"code":"import _defineProperty from \"/Users/admin/Desktop/Projects/gif-jitsu/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/admin/Desktop/Projects/gif-jitsu/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Desktop/Projects/gif-jitsu/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Desktop/Projects/gif-jitsu/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Desktop/Projects/gif-jitsu/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Desktop/Projects/gif-jitsu/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/admin/Desktop/Projects/gif-jitsu/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/admin/Desktop/Projects/gif-jitsu/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport movie from \"./movie.mp4\";\nimport subtitles from \"./subtitles.vtt\";\nimport { Player } from \"video-react\";\nimport { Button, Form, FormGroup, Label, Input, Col } from \"reactstrap\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props, context) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props, context));\n    _this.state = {\n      playerSource: \"https://media.w3.org/2010/05/sintel/trailer_hd.mp4\",\n      inputVideoUrl: \"http://www.w3schools.com/html/mov_bbb.mp4\"\n    };\n    _this.handleValueChange = _this.handleValueChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updatePlayerInfo = _this.updatePlayerInfo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.state.playerSource !== prevState.playerSource) {\n        this.refs.player.load();\n      }\n    }\n  }, {\n    key: \"handleValueChange\",\n    value: function handleValueChange(e) {\n      var value = e.target.value;\n      this.setState(_defineProperty({}, e.target.id, value));\n    }\n  }, {\n    key: \"updatePlayerInfo\",\n    value: function updatePlayerInfo() {\n      this.setState({\n        playerSource: this.state.inputVideoUrl\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Player, {\n        ref: \"player\",\n        videoId: \"video-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"source\", {\n        src: this.state.playerSource,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), \" \", React.createElement(\"track\", {\n        label: \"English\",\n        kind: \"subtitles\",\n        srcLang: \"en\",\n        src: subtitles,\n        default: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"docs-example\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"inputVideoUrl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Video Url\"), React.createElement(Input, {\n        ref: \"inputVideoUrl\",\n        name: \"inputVideoUrl\",\n        id: \"inputVideoUrl\",\n        value: this.state.inputVideoUrl,\n        onChange: this.handleValueChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"button\",\n        onClick: this.updatePlayerInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Update\")))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/admin/Desktop/Projects/gif-jitsu/client/src/App.js"],"names":["React","Component","movie","subtitles","Player","Button","Form","FormGroup","Label","Input","Col","App","props","context","state","playerSource","inputVideoUrl","handleValueChange","bind","updatePlayerInfo","prevProps","prevState","refs","player","load","e","value","target","setState","id"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,KAAlC,EAAyCC,KAAzC,EAAgDC,GAAhD,QAA2D,YAA3D;;IAEqBC,G;;;;;AACnB,eAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA;;AAC1B,6EAAMD,KAAN,EAAaC,OAAb;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,oDADH;AAEXC,MAAAA,aAAa,EAAE;AAFJ,KAAb;AAKA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,uDAAzB;AACA,UAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBD,IAAtB,uDAAxB;AAT0B;AAU3B;;;;uCAEkBE,S,EAAWC,S,EAAW;AACvC,UAAI,KAAKP,KAAL,CAAWC,YAAX,KAA4BM,SAAS,CAACN,YAA1C,EAAwD;AACtD,aAAKO,IAAL,CAAUC,MAAV,CAAiBC,IAAjB;AACD;AACF;;;sCAEiBC,C,EAAG;AACnB,UAAIC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAArB;AACA,WAAKE,QAAL,qBACGH,CAAC,CAACE,MAAF,CAASE,EADZ,EACiBH,KADjB;AAGD;;;uCAEkB;AACjB,WAAKE,QAAL,CAAc;AACZb,QAAAA,YAAY,EAAE,KAAKD,KAAL,CAAWE;AADb,OAAd;AAGD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAC,QAAZ;AAAqB,QAAA,OAAO,EAAC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,GAAG,EAAE,KAAKF,KAAL,CAAWC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAC2C,GAD3C,EAEE;AACE,QAAA,KAAK,EAAC,SADR;AAEE,QAAA,IAAI,EAAC,WAFP;AAGE,QAAA,OAAO,EAAC,IAHV;AAIE,QAAA,GAAG,EAAEZ,SAJP;AAKE,QAAA,OAAO,MALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAWE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,KAAD;AACE,QAAA,GAAG,EAAC,eADN;AAEE,QAAA,IAAI,EAAC,eAFP;AAGE,QAAA,EAAE,EAAC,eAHL;AAIE,QAAA,KAAK,EAAE,KAAKW,KAAL,CAAWE,aAJpB;AAKE,QAAA,QAAQ,EAAE,KAAKC,iBALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAWE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAKE,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAXF,CADF,CAXF,CADF;AAiCD;;;;EAlE8BlB,S;;SAAZU,G","sourcesContent":["import React, { Component } from \"react\";\nimport movie from \"./movie.mp4\";\nimport subtitles from \"./subtitles.vtt\";\nimport { Player } from \"video-react\";\nimport { Button, Form, FormGroup, Label, Input, Col } from \"reactstrap\";\n\nexport default class App extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      playerSource: \"https://media.w3.org/2010/05/sintel/trailer_hd.mp4\",\n      inputVideoUrl: \"http://www.w3schools.com/html/mov_bbb.mp4\"\n    };\n\n    this.handleValueChange = this.handleValueChange.bind(this);\n    this.updatePlayerInfo = this.updatePlayerInfo.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.playerSource !== prevState.playerSource) {\n      this.refs.player.load();\n    }\n  }\n\n  handleValueChange(e) {\n    var value = e.target.value;\n    this.setState({\n      [e.target.id]: value\n    });\n  }\n\n  updatePlayerInfo() {\n    this.setState({\n      playerSource: this.state.inputVideoUrl\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Player ref=\"player\" videoId=\"video-1\">\n          <source src={this.state.playerSource} />{\" \"}\n          <track\n            label=\"English\"\n            kind=\"subtitles\"\n            srcLang=\"en\"\n            src={subtitles}\n            default\n          />\n        </Player>\n        <div className=\"docs-example\">\n          <Form>\n            <FormGroup>\n              <Label for=\"inputVideoUrl\">Video Url</Label>\n              <Input\n                ref=\"inputVideoUrl\"\n                name=\"inputVideoUrl\"\n                id=\"inputVideoUrl\"\n                value={this.state.inputVideoUrl}\n                onChange={this.handleValueChange}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Button type=\"button\" onClick={this.updatePlayerInfo}>\n                Update\n              </Button>\n            </FormGroup>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}